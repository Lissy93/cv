name: 🔨 Compile

on:
  workflow_dispatch:
  push:
    paths:
      - 'tex/**'
    tags:
      - '**'
  pull_request:
    paths:
      - 'tex/**'
  workflow_run:
    workflows: ["🏷️ Tag"]
    types:
      - completed

env:
  PDF_NAME: Alicia-Sykes-CV.pdf

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 🛎️ Checkout repository
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd lib && pip install -r requirements.txt

    - name: 📝 Install LaTeX
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-full latexmk

    - name: 📄 Generate PDF
      run: make

    - name: 📤 Upload PDF artifact
      uses: actions/upload-artifact@v4
      with:
        name: resume-pdf
        path: out/${{ env.PDF_NAME }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') ||
      github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'

    steps:
    - name: 🛎️ Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🏷️ Download Tag Artifact
      if: github.event_name == 'workflow_run'
      uses: actions/download-artifact@v4
      with:
        name: tag
        path: .
      continue-on-error: true

    - name: 🏷️ Determine Tag Name
      id: determine_tag
      run: |
        # Attempt to get tag from most recent tag creared (fallback)
        TAG_NAME=$(git describe --tags --abbrev=0 2>/dev/null)
        # If workflow was triggered by the tag workflow, use the new tag
        if [ "$GITHUB_EVENT_NAME" == "workflow_run" ]; then
          if [[ -n "${{ github.event.workflow_run.outputs.new_tag }}" ]]; then
            TAG_NAME="${{ github.event.workflow_run.outputs.new_tag }}"
          elif [[ -f tag.txt ]]; then
            TAG_NAME=$(cat tag.txt)
          fi
        # If workflow was triggered by a push event, use the tag from the ref
        elif [[ "$GITHUB_EVENT_NAME" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
          TAG_NAME="${{ github.ref }}"
        fi
        echo "Using tag $TAG_NAME"
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
    

    - name: 🔍 Check if release already exists
      id: check_release
      run: |
        if [ -z "$TAG_NAME" ]; then
          echo "No tag name found, skipping release check"
          exit 1
        fi  
        if gh release view "$TAG_NAME" > /dev/null 2>&1; then
          echo "Release for tag $TAG_NAME already exists."
          exit 1
        else
          echo "Tag is present, valid and no existing releases exist. Continuing with $TAG_NAME...."
        fi

    - name: 📤 Download PDF artifact
      uses: actions/download-artifact@v4
      with:
        name: resume-pdf
        path: out/

    - name: 🔑 Set up GitHub CLI
      run: |
        echo "${{ secrets.BOT_TOKEN }}" | gh auth login --with-token

    - name: 📄 Create GitHub Release
      run: |
        gh release create $TAG_NAME out/${{ env.PDF_NAME }} --title "Release $TAG_NAME" --notes "Generated CV PDF for release $TAG_NAME"
        
