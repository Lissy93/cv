name: ü™Å Make Site

on:
  push:
    branches: [ main ]
    paths:
      - 'web/**'
      - 'resume.yml'
      - '.github/workflows/build-site.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'web/**'
      - 'resume.yml'
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: build-site
  cancel-in-progress: true

jobs:
  build-cv:
    name: Build CV PDF
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'lib/requirements.txt'
      - name: Cache LaTeX packages
        uses: actions/cache@v4
        with:
          path: |
            /usr/share/texlive
            /usr/share/texmf
            /var/lib/texmf
          key: latex-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            latex-${{ runner.os }}-
      
      - name: Install LaTeX (optimized)
        run: |
          # Update package list only if cache miss
          if [ ! -f "/usr/bin/xelatex" ]; then
            echo "üîÑ Installing LaTeX packages..."
            # Use faster mirror and minimal packages
            sudo apt-get update -qq -o Acquire::Languages=none
            sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
              texlive-xetex \
              texlive-fonts-recommended \
              texlive-latex-extra \
              fonts-font-awesome \
              && sudo apt-get clean \
              && sudo rm -rf /var/lib/apt/lists/*
          else
            echo "‚úÖ LaTeX already cached and available"
          fi
      - name: Install Python dependencies
        run: |
          pip install -r lib/requirements.txt
      
      - name: Generate PDF
        run: |
          echo "üîÑ Generating PDF from CV data..."
          
          # Create output directory
          mkdir -p out
          
          # Generate LaTeX from template
          python lib/generate.py --resume resume.yml --template template.jinja --output tex/resume.tex
          echo "‚úÖ LaTeX template generated successfully"
          
          # Compile LaTeX to PDF  
          python lib/compile.py --input tex/resume.tex --output out/Alicia-Sykes-CV.pdf
          echo "‚úÖ PDF generated successfully"
          ls -la out/Alicia-Sykes-CV.pdf
      
      - name: Upload CV PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: cv-pdf
          path: out/Alicia-Sykes-CV.pdf
          retention-days: 90

  build-website:
    name: Build Website
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'
      
      - name: Install web dependencies
        run: |
          cd web
          npm ci
      
      - name: Build website
        env:
          GITHUB_PAGES: true
        run: |
          cd web
          npm run build
      
      - name: Verify build output
        run: |
          cd web
          if [ -f "build/index.html" ]; then
            echo "‚úÖ Static site built successfully"
            echo "Build directory contains:"
            ls -la build/ | head -15
            echo ""
            echo "Build size:"
            du -sh build/
          else
            echo "‚ùå Build failed - no index.html found in build directory"
            exit 1
          fi
      
      - name: Upload website artifact
        uses: actions/upload-artifact@v4
        with:
          name: website-build
          path: web/build/
          retention-days: 90

  deploy:
    name: Deploy to Website Branch
    runs-on: ubuntu-latest
    needs: [build-cv, build-website]
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request' && needs.build-website.result == 'success'
    
    steps:
      - name: Download CV PDF artifact
        if: needs.build-cv.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: cv-pdf
          path: ./pdf/
      
      - name: Download website artifact
        uses: actions/download-artifact@v4
        with:
          name: website-build
          path: ./website/
      
      - name: Copy PDF to website build
        run: |
          # Copy PDF with web-friendly filename if CV build succeeded
          if [ "${{ needs.build-cv.result }}" = "success" ] && [ -f "pdf/Alicia-Sykes-CV.pdf" ]; then
            cp "pdf/Alicia-Sykes-CV.pdf" "website/alicia-sykes-cv.pdf"
            echo "‚úÖ PDF copied to website build as alicia-sykes-cv.pdf"
            ls -lh website/alicia-sykes-cv.pdf
          else
            echo "‚ö†Ô∏è  CV build failed or PDF not found, deploying website without PDF"
          fi
      
      - name: Deploy to website branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.BOT_TOKEN }}
          external_repository: ${{ github.repository }}
          publish_branch: website
          publish_dir: ./website/
          user_name: 'liss-bot'
          user_email: 'alicia-gh-bot@mail.as93.net'
          commit_message: |
            ü™Å Deploy website from ${{ github.sha }}
            
            Auto-generated from main branch
            Commit: ${{ github.event.head_commit.message }}
          enable_jekyll: false
          force_orphan: true

  comment-pr:
    name: Comment on PR
    runs-on: ubuntu-latest
    needs: [build-cv, build-website]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const cvStatus = '${{ needs.build-cv.result }}';
            const websiteStatus = '${{ needs.build-website.result }}';
            
            let message = 'ü™Å Build completed!\n\n';
            message += `- CV PDF: ${cvStatus === 'success' ? '‚úÖ Generated successfully' : '‚ùå Failed to generate'}\n`;
            message += `- Website: ${websiteStatus === 'success' ? '‚úÖ Built successfully' : '‚ùå Failed to build'}\n\n`;
            
            if (cvStatus === 'success' && websiteStatus === 'success') {
              message += 'Both CV and website will be deployed when this PR is merged.';
            } else {
              message += 'Please check the failed jobs before merging.';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            })
